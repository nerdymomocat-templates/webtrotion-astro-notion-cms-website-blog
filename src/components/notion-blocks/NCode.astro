---
import Prism from "prismjs";
import "prismjs/components/prism-css";
import "prismjs/components/prism-diff";
import "prismjs/components/prism-docker";
import "prismjs/components/prism-elixir";
import "prismjs/components/prism-go";
import "prismjs/components/prism-hcl";
import "prismjs/components/prism-java";
import "prismjs/components/prism-json";
import "prismjs/components/prism-python";
import "prismjs/components/prism-ruby";
import "prismjs/components/prism-sql";
import "prismjs/components/prism-typescript";
import "prismjs/components/prism-yaml";
import 'prismjs/components/prism-latex'
import 'prismjs/components/prism-markdown'
import 'prismjs/components/prism-markup'
import 'prismjs/components/prism-json'
import * as interfaces from "../../lib/interfaces";
import Caption from "./Caption.astro";
import { HTML_DIRECTIVE } from "@/constants";

export interface Props {
	block: interfaces.Block;
  setId?:boolean;
}

const { block, setId=true } = Astro.props


const code = block.Code.RichTexts.map(
	(richText: interfaces.RichText) => richText.Text.Content,
).join("");
const language = block.Code.Language.toLowerCase();
const grammar = Prism.languages[language.toLowerCase()] || Prism.languages.javascript;
const code_inject = HTML_DIRECTIVE? code.startsWith(HTML_DIRECTIVE):false;
// <Fragment set:html={code.replace(HTML_DIRECTIVE,"")}/>
---
{
  code_inject ?
  (
    <div class="injectedcode w-full mb-1 max-w-full" id={setId?block.Id:undefined}>
    <iframe srcdoc={code.replace(HTML_DIRECTIVE,"") } class="max-w-full h-[340px] w-full border-none rounded-lg" loading="lazy"></iframe>
  </div>

  )
  :
  (
  <div class="code w-full mb-1 font-mono relative max-w-full" id={setId?block.Id:undefined}>
	<div>
          <div class="flex max-w-full">
            <button class="copy border-0 p-2 cursor-pointer absolute top-0 right-0" data-code={code} aria-label="copy code">
              <svg class="inline h-5 w-5 transition-colors duration-300 svg-icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                  <path fill="#888888" d="M19 21H8V7h11m0-2H8a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h11a2 2 0 0 0 2-2V7a2 2 0 0 0-2-2m-3-4H4a2 2 0 0 0-2 2v14h2V3h12V1Z"/>
              </svg>
            </button>
          </div>
		{

			language === 'mermaid' ? (
         <pre class="rounded mermaid p-4 max-w-full">{code}</pre>
      ) : (
          <pre class={`rounded whitespace-pre-wrap p-4 overflow-auto break-word leading-6 tabular-nums text-left no-hyphens bg-slate-900 text-sky-600 ${"language-"+language}`}><code set:html={Prism.highlight(code, grammar, language)} /></pre>
      )
		}
	</div>
	<Caption richTexts={block.Code.Caption}  block={block}/>
</div>

<script>
  document.querySelectorAll("button.copy").forEach((button) => {
  button.addEventListener("click", (ev) => {
    const svg = button.querySelector('.svg-icon path');
    const code = ev.currentTarget.getAttribute("data-code");
    navigator.clipboard.writeText(code);
    if (svg) {
      svg.setAttribute("fill", "limegreen");
      setTimeout(() => {
        svg.setAttribute("fill", "#888888");
      }, 1000);
    }
  });
});
</script>
  )
}
<script>
  import mermaid from 'mermaid'
  mermaid.initialize({ startOnLoad: true, theme: 'neutral' })
</script>
