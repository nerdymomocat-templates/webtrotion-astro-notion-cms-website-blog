---
import * as interfaces from "../../lib/interfaces";
import { filePath } from "../../lib/blog-helpers";
import { textToAstroIcon } from "@/lib/style-helpers";
import { Icon } from "astro-iconify";

export interface Props {
	block: interfaces.Block;
}

const { block } = Astro.props;

let url: URL;
try {
	url = new URL(block.File?.External?.Url || block.File?.File?.Url);
} catch (err) {
	console.error(`Invalid file URL. error: ${err}`);
}
const filename = decodeURIComponent(url.pathname.split("/").slice(-1)[0]);
---

<div class="file">
	{
		url && (
			<div>
				{block.File.Caption && block.File.Caption.length > 0 && block.File.Caption[0].Text.Content
					? block.File.Caption[0].Text.Content
					: filename}
				{"  "}
				<a
					href={block.File.External ? url.String() : filePath(url)}
					target="_blank"
					rel="noopener noreferrer"
				>
					<span class="inline-flex items-center justify-center rounded-lg border border-accent-2/20 p-0.5 font-medium hover:border-accent/40">
						Download <Icon name={textToAstroIcon("download")} class="inline h-4 w-4" />
					</span>
				</a>
			</div>
		)
	}
</div>
