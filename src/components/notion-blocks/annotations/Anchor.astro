---
import { buildHeadingId } from "../../../lib/blog-helpers.ts";
import { RichText } from "../../../lib/interfaces.ts";
import { getBlock } from "../../../lib/notion/client.ts";
import { Post } from "../../../lib/interfaces.ts";
import { getPostByPageId, getBlockParentPageId } from "../../../lib/notion/client";
import { getPostLink } from "../../../lib/blog-helpers.ts";
import { MENU_PAGES_COLLECTION } from "@/constants";

export interface Props {
	richText: RichText;
	blockID?: string;
}

const { richText, blockID } = Astro.props;

let block_linked = null;
let block_linked_id = null;
let post: Post = null;
let pageId = null;
let current_page_id = null;

pageId = richText.InternalHref?.PageId;
if (pageId) {
	post = await getPostByPageId(pageId);
}

if (post && richText.InternalHref?.BlockId) {
	block_linked = await getBlock(richText.InternalHref?.BlockId);
	if (block_linked && (block_linked.Heading1 || block_linked.Heading2 || block_linked.Heading3)) {
		block_linked_id = buildHeadingId(
			block_linked.Heading1 || block_linked.Heading2 || block_linked.Heading3,
		);
		current_page_id = blockID ? await getBlockParentPageId(blockID) : null;
	}
}
---

{
	/* prettier-ignore */
	richText.Href && !richText.Mention && !richText.InternalHref? (
    <a href={richText.Href} class="text-link underline hover:no-underline underline-offset-4"><slot /></a>
  ) : block_linked_id && post && current_page_id && pageId==current_page_id?(<a href={`#${block_linked_id}`} class="underline-offset-4 text-link underline hover:no-underline"><slot /></a>):
  block_linked_id && post?(
    <a href={`${getPostLink(post.Slug, post.Collection===MENU_PAGES_COLLECTION)}#${block_linked_id}`} class="underline-offset-4 text-link underline hover:no-underline"><slot /></a>
  ): post?( <a href={getPostLink(post.Slug, post.Collection===MENU_PAGES_COLLECTION)} class="underline-offset-4 text-link underline hover:no-underline"><slot /></a>
  ):
  (
    <slot />
  )
}
