---
import { Mention } from "../../lib/interfaces.ts";
import Icon from "@/components/Icon";

export interface Props {
	mention: Mention;
}

const { mention } = Astro.props;

if (!mention.LinkMention) {
	return null;
}

const {
	Href,
	Title,
	IconUrl,
	Description,
	LinkAuthor,
	ThumbnailUrl,
	Height,
	IframeUrl,
	LinkProvider,
} = mention.LinkMention;

if (!Href)
{
  return null;
}
const isEmbeddable = IframeUrl? true: false;
let id = "id" + Math.random().toString(16).slice(2);
const heightClass = Height && Height < 380 ? `h-[${Height}px]` : 'h-[340px]';
const truncatedHref = Href && Href.length > 30 ? Href.slice(0, 30) + '...' : Href;
---

{
	isEmbeddable ? (
<>
			<a
				data-popover-target=`popover-description-${id}`
      data-popover-placement="bottom-end"
				data-href={Href}
				href={Href}
        target="_blank"
			>
				{IconUrl ? (
					<>
						<img src={IconUrl} alt="" class="inline h-4 w-4 mb-0.5 flex-shrink-0 align-sub" />{" "}
					</>
				):
        <>
        <Icon name={"external-link-mention"} class="inline h-4 w-4 mb-0.5" aria-hidden="true" />{" "}
        </>}
				{LinkProvider && (
					<>
						<span class="text-link/80">{LinkProvider}</span>{" "}
					</>
				)}
				{Title && <span class="font-semibold text-link">{Title}</span>}
			</a>
		</>
	) : (
		<>
			<a
				data-popover-target=`popover-description-${id}`
      data-popover-placement="bottom-end"
				data-href={Href}
				href={Href}
        target="_blank"
			>
				{IconUrl ? (
					<>
						<img src={IconUrl} alt="" class="inline h-4 w-4 mb-0.5 flex-shrink-0 align-sub" />{" "}
					</>
				):
        <>
        <Icon name={"external-link-mention"} class="inline h-4 w-4 mb-0.5" aria-hidden="true" />{" "}
        </>}
				{LinkAuthor && (
					<>
						<span class="text-link/80">{LinkAuthor}</span>{" "}
					</>
				)}
				{Title && <span class="font-semibold text-link">{Title}</span>}
			</a>
		</>
	)
}

<template id=`template-popover-description-${id}`>
	<div
		data-popover
		id=`popover-description-${id}`
		role="tooltip"
		class="popoverEl invisible absolute z-40 inline-block hidden w-72 rounded-lg bg-white text-sm text-gray-500 opacity-0 shadow-sm transition-opacity duration-300 dark:bg-gray-800 dark:text-gray-400"
	>
  {isEmbeddable? (
  <iframe
		allowtransparency="true"
    class={`lazyload w-full min-h-[100px] ${heightClass} max-w-full rounded-md border-none`}
		loading="lazy"
		data-src={IframeUrl}
		title={Title}></iframe>
  ):(
  <a href={Href}>
    {
	ThumbnailUrl && (

					<img
						class="imagemedia block mx-auto min-w-0 max-w-full rounded-t-md"
						src={ThumbnailUrl}
						loading="lazy"
						alt={Title}
					/>

	)

}
<div class="mx-4 my-2 gap-2">
{Title && <div class="font-semibold text-sm">{Title}</div>}
{Description && <div class="text-xs">{Description}</div>}
<div class="mt-4">
{IconUrl ? (
					<>
						<img src={IconUrl} alt="" class="inline h-4 w-4 mb-0.5 flex-shrink-0 align-sub" />{" "}
					</s>
				):
        <>
        <Icon name={"external-link-mention"} class="inline h-4 w-4 mb-0.5" aria-hidden="true" />{" "}
        </>}
        {Href && <span class="text-xs font-semibold text-link/80">{truncatedHref}</span>}
      </div>
      </div>
  </a>)}
</template>
