---
import * as interfaces from "../../lib/interfaces.ts";
import { buildHeadingId } from "../../lib/blog-helpers.ts";
import RichText from "./RichText.astro";
import NotionBlocks from "../NotionBlocks.astro";

export interface Props {
  block: interfaces.Block;
  headings: interfaces.Block[];
  renderChildren?: boolean; // Make this optional
}

const { block, headings, renderChildren = true } = Astro.props;

const id = buildHeadingId(block.Heading1);
---

{
	block.Heading1.IsToggleable ? (
		<details class="toggle mb-0 mt-8">
			<summary class="flex cursor-pointer list-none gap-2">
				<div>
					<svg
						class="rotate-svg mt-1 flex-shrink-0 transition-all duration-300"
						fill="none"
						height="20"
						width="20"
						stroke="currentColor"
						stroke-linecap="round"
						stroke-linejoin="round"
						stroke-width="2"
						viewBox="0 0 24 24"
					>
						<polyline points="12 8 18 14 12 20" />
					</svg>
				</div>
				<a
					class="inline"
					href={`#${id}`}
					id={id}
					onclick="var fullUrl = `${window.location.origin}${window.location.pathname}#${this.id}`; navigator.clipboard.writeText(fullUrl); this.closest('details').open = !this.closest('details').open;"
				>
					<h2 class="toggle-h2 mb-4 mt-8 inline text-2xl">
						{block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
							<RichText richText={richText} blockID={block.Id} />
						))}
					</h2>
				</a>
			</summary>
			<div class="pl-10">
				{block.Heading1.Children && renderChildren && (
					<NotionBlocks blocks={block.Heading1.Children} headings={headings} />
				)}
			</div>
		</details>
	) : (
		<a
			href={`#${id}`}
			id={id}
			class="inline"
			onclick="var fullUrl = `${window.location.origin}${window.location.pathname}#${id}`; navigator.clipboard.writeText(fullUrl);"
		>
			<h2 class="non-toggle-h2 mb-4 mt-8 text-2xl font-normal">
				{block.Heading1.RichTexts.map((richText: interfaces.RichText) => (
					<RichText richText={richText} blockID={block.Id} />
				))}
			</h2>
		</a>
	)
}

<style>
	h2::before {
		content: "#";
		position: absolute;
		color: rgb(var(--theme-accent));
		margin-left: -1.5rem;
		display: inline-block;
		opacity: 0; /* Start with invisible content */
		transition: opacity 0.3s ease; /* Transition the opacity */
	}

	h2:hover::before {
		opacity: 1; /* Make the content visible on hover */
	}
	h2.toggle-h2::before {
		margin-left: -2.5rem;
	}
	details[open] > summary > div > .flex-shrink-0.rotate-svg {
		transform: rotate(90deg);
	}
  summary::-webkit-details-marker {
      display:none;
   }
</style>
