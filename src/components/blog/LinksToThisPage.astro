---
import type { Block, Post } from '@/lib/interfaces';
interface Props {
	post: Post;
  allReferencesToPage: { entryId: string, block: Block }[]
}
const { post, allReferencesToPage } = Astro.props;
const groupedReferences = allReferencesToPage? allReferencesToPage.reduce((acc, { entryId, block }) => {
  acc[entryId] = acc[entryId] || [];
  acc[entryId].push(block);
  return acc;
}, {}): null;

---
{groupedReferences && (<div>
  Related Pages
  {Object.entries(groupedReferences).map(([entryId, blocks]) => (
    <p key={entryId}>
      Mentioned in {entryId} at {blocks.map((block, index) => `${index + 1}:${block.Id}`).join(' ')}
    </p>
  ))}
</div>)}
