---
import { getReferencesInPage } from '@/lib/blog-helpers';
import type { Post, ReferencesInPage } from '@/lib/interfaces';
interface Props {
	post: Post;
  filteredReferencesInPage: ReferencesInPage[];
}
const { post, filteredReferencesInPage } = Astro.props;

const groupedReferences: { [key: string]: Block[] } =
filteredReferencesInPage.reduce((acc, ref) => {
    // Group by direct_nonmedia_link and collect Block objects
    if (ref.direct_media_link) {
      const key = ref.direct_media_link;
      acc[key] = acc[key] || [];
      acc[key].push(ref.block);
    }
    return acc;
  }, {});


---

{groupedReferences && (<div>
Media Links In This Page  {Object.entries(groupedReferences).map(([entryId, blocks]) => (
    <p key={entryId}>
      Mentions {entryId} at {blocks.map((block, index) => `${index + 1}:${block.Id}`).join(' ')}
    </p>
  ))}
</div>)}
