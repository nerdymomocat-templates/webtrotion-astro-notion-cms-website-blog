---
import type { TocItem } from "@/utils";

interface Props {
  heading: TocItem;
  visualOnly?: boolean;
}

const {
  heading: { slug, text, depth, subheadings },
  visualOnly = false,
} = Astro.props;

const getVisualStyles = (depth: number) => {
  const baseStyle = "h-[2px] bg-accent/25 rounded-full";
  const styles = {
    1: "w-4",
    2: "mt-2 ml-1 w-[12px]",
    3: "mt-2 ml-2 w-2"
  };
  return `${styles[depth] || ""} ${baseStyle}`.trim();
};
---

{visualOnly ? (
  <div class="mt-0">
    <div class={getVisualStyles(depth)} id={`-vistocid--${slug}`}/>
    {!!subheadings.length && (
      <div>
        {subheadings.map((subheading) => (
          <Astro.self heading={subheading} visualOnly={true}/>
        ))}
      </div>
    )}
  </div>
) : (
  <li class={depth > 1 ? "ml-3" : ""}>
    <a
      class={`block line-clamp-3 no-underline text-textColor/60 hover:text-textColor ${slug === "autogenerated-interlinked-content" ? "hidden" : ""} py-1 px-2 rounded transition-colors duration-200 ease-in-out hover:bg-accent/5`}
      href={`#${slug}`}
      id={`-tocid--${slug}`}
      aria-label={`Scroll to section: ${text}`}
    >
      {text}
    </a>
    {!!subheadings.length && (
      <ul>
        {subheadings.map((subheading) => (
          <Astro.self heading={subheading} />
        ))}
      </ul>
    )}
  </li>
)}
