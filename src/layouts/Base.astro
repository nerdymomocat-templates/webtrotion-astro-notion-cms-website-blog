---
import type { SiteMeta } from "@/types";
// import { ViewTransitions } from "astro:transitions";
import BaseHead from "@/components/BaseHead";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";
import SkipLink from "@/components/SkipLink";
import { siteInfo } from "@/siteInfo";
import { ENABLE_LIGHTBOX, REFERENCES } from "@/constants";

interface Props {
	meta: SiteMeta;
}

const {
	meta: { title = siteInfo.title, description = siteInfo.description, ogImage, articleDate },
} = Astro.props;

---

<html lang={siteInfo.lang}>
	<head>
		<BaseHead title={title} description={description} ogImage={ogImage} articleDate={articleDate} />
    <!-- <ViewTransitions /> -->
	</head>
	<body>
		<SkipLink />
		<Header />
		<main id="main" class="lg:w-[125%]">
			<slot />
		</main>
		<Footer />
    {/*Lightbox */}
{
  ENABLE_LIGHTBOX && (
  <script type="module">
  import 'https://cdn.jsdelivr.net/gh/mcstudios/glightbox/dist/js/glightbox.min.js';

  window.addEventListener('load', () => {
    const lightbox = GLightbox({
      selector: '.mediaglightbox, .fileglightbox, .embedglightbox'
    });
  });
</script>
)


}
{
REFERENCES && REFERENCES["popovers"] && (
<script type="module">
  import {computePosition, flip, inline, shift} from 'https://cdn.jsdelivr.net/npm/@floating-ui/dom@1.5.3/+esm';
  document.addEventListener("DOMContentLoaded", function () {
    console.log("Gi");
    document.querySelectorAll('[data-popover-target]').forEach(($triggerEl) => {
        const popoverID = $triggerEl.getAttribute('data-popover-target');
        const $popoverEl = document.getElementById(popoverID);

        if ($popoverEl) {
            const triggerType = "hover";
            const placement = "auto";
            const offset = $triggerEl.getAttribute('data-popover-offset');

            new Popover(
                $popoverEl as HTMLElement,
                $triggerEl as HTMLElement,
                {
                    placement: placement ? placement : Default.placement,
                    offset: offset ? parseInt(offset) : Default.offset,
                    triggerType: triggerType
                        ? triggerType
                        : Default.triggerType,
                } as PopoverOptions
            );
        } else {
            console.error(
                `The popover element with id "${popoverID}" does not exist. Please check the data-popover-target attribute.`
            );
        }
    });
  })

</script>
  )
}

	</body>
</html>
